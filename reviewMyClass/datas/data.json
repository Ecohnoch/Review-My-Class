{
    "离散数学": {
        "第一章 命题逻辑":{
            "1.1 命题和连结词":{
                "命题": "或者为假, 或者为真, 不可同时成立的陈述句",
                "连结词": "自然语言中的连词的逻辑抽象"
            },
            "1.2 合式公式与真值表":{
                "原子命题": "不可再分的命题, <font color = 'blue'>即不包含逻辑连结词的命题</font>",
                "合式公式": "由命题变元, 逻辑连结词, 及圆括号可以构成合式的公式<br>满足下列四个条件<br><font color = 'blue'>(1)真值T和F是合式公式</font><br><font color = 'blue'>(2)原子命题公式是合式公式</font><br><font color = 'blue'>(3)如果A是合式公式,则~A是合式公式</font><br><font color = 'blue'>(4)如果A和B均是合式公式, 那么A&B, A|B, A→B,A←→B均为合式公式</font>",
                "真值表" : "你懂得.."
            },
            "1.3 永真式和等价式":{
                "永真式": "取值恒为1的命题公式",
                "永假式": "取值恒为0的命题公式",
                "可满足式": "给定一组真值指派, 可以使得命题公式取值为1, 则该命题公式称为可满足式",
                "等价式": "AB在<font color = 'blue'>任意解释</font>下, 真值都相同",
                "常用逻辑恒等式": "<font color = 'blue'>交换律</font><br>P V Q = Q V P <br>P ^ Q = Q ^ P <br>P ←→ Q = Q ←→ P <br><font color = 'blue'>结合律</font><br>(P V Q) V R = P V (Q V R)<br>(P ^ Q) ^ R = P ^ (Q ^ R)<br>(P ←→ Q) ←→ R = P ←→ (Q ←→ R)<br><font color = 'blue'>分配率</font><br>(P V Q) ^ R = (P ^ R) V (P ^ R)<br>(P ^ Q) V R = (P V R) ^ (Q V R)<br>P→(Q → R) = (P → Q) → (P → R)<br><font color = 'blue'>双重否定律</font><br> ~(~P) = P <br><font color = 'blue'>德摩根律</font><br>~(P ^ Q) = ~P V ~Q<br>~(P V Q) = ~P ^ ~Q<br><font color = 'blue'>逆反律</font><br>P → Q = ~Q → ~P<br><font color = 'blue'>等幂律</font><br>P V P = P<br>P ^ P = P<br><font color = 'blue'>输出律</font><br>(P ^ Q) → R = P → (Q → R)<br><font color = 'blue'>吸收率</font><br>P ^ (P V Q) = P<br>P V (P ^ Q) = P<br>"
            },
            "1.4 对偶式与蕴含式":{
                "对偶式": "仅含有逻辑连结词~ V ^和逻辑常值T F, <font color = 'blue'>在A中V ^ T F分别用^ V F T替换得到的公式A*</font>, 称A*为A的对偶式",
                "对偶定理1": "~A(P1, P2, P3, ...Pn) = A*(~P1, ~P2, ~P3, ~P4....~Pn)",
                "对偶定理2": "<font size = 20>若A = B, 则A* = B*</font>",
                "对偶定理3": "<font size = 20>若A → B, 则A* → B*</font>",
                "永真蕴含式": "A→B是一个永真式, 则成为永真蕴含式, 记为 A => B, 即A永真蕴含B"
            },
            "1.5 范式和判定问题":{
                "基本积" : "给定命题变元A B, 则A, B, ~A, ~B, P ^ Q, ~P ^ Q, P ^ ~Q..",
                "基本和" : "给定命题变元A B, 则A, B, ~A, ~B, p v q, ~p v Q, ...."
            },
            "1.6 命题演算和推理理论":{},
            "1.7 基于布尔逻辑的信息检索":{}
        },
        "第二章 谓词逻辑":{
            "2.1 命题和连结词":{
                "命题": "测试一下能不能用"
            },
            "2.2 合式公式与真值表":{},
            "2.3 永真式和等价式":{},
            "2.4 对偶式与蕴含式":{},
            "2.5 范式和判定问题":{},
            "2.6 命题演算和推理理论":{},
            "2.7 基于布尔逻辑的信息检索":{}
        },
        "第三章 集合论":{},
        "第四章 二元关系":{},
        "第五章 函数":{},
        "第六章 代数系统":{},
        "第七章 群与环":{},
        "第八章 格与布尔代数":{},
        "第九章 图":{},
        "第十章 几种特殊图":{},
        "第十一章 树":{}
    },
    "计算机组成原理": {
        "第一章 计算机系统概述": {
            "1.1 计算机系统简介" :{
                "硬件": "计算机的<font color = 'blue'>实体部分</font>, 如主机, 外部设备",
                "软件": "具有特殊功能的<font color = 'blue'>程序</font>, 有<font color = 'blue'>应用软件</font>和<font color = 'blue'>系统软件</font>之分",
                "系统软件": "又称系统程序, 作用是<font color = 'blue'>管理整个计算机系统, 监视服务, 使系统资源得到合理调度, 高效运行</font><br>它包括<font color = 'blue'>标准程序库, 语言处理程序, 操作系统, 数据库管理系统, 网络软件等</font>",
                "应用软件": "<font color = 'blue'>用户根据任务需要所编制的各种程序</font>, 如科学计算程序, 数据处理程序, 过程控制程序, 事务管理程序等."	,
                "翻译程序": "将高级语言翻译成机器语言程序的软件, 有编译程序和解释程序两种",
                "编译程序": "属于翻译程序, 将源程序的所有语句一次性全部翻译成机器语言程序, 然后执行",
                "解释程序": "将源程序的一条语句翻译成对应于机器语言的一条语句",
                "计算机体系结构": "能够被程序员见到的计算机系统的属性, <font color = 'blue'>即概念性的结构和功能特性</font>",
                "计算机系统的属性": "用机器语言(或者汇编等)编程的程序员所看到的<font color = 'blue'>传统机器的属性</font><br><br>包括指令集, 数据类型, 存储器寻址技术, I/O机理等, 大都是抽象的属性",
                "计算机组成": "是指<font color = 'blue'>如何实现计算机体系结构所体现的属性</font><br><br>例如指令系统体现了机器的属性吗这是计算机结构的问题, 但是指令的<font color = 'blue'>实现, 即如何取指令, 分析指令, 取操作数, 运算, 送结果等都属于计算机组成问题."
            },
            "1.2 计算机基本组成(概念)":{
                "冯诺依曼机特点":"<font color = 'blue'>重点:</font><br>(1)计算机由<font color = 'blue'>运算器, 存储器, 控制器, 输入设备, 输出设备五大部件组成<br>(2)指令和数据以同等地位存放于存储器内, 并可按地址寻访<br>(3)指令和数据均用二进制数表示<br>(4)指令由操作码和地址码组成<br>(5)指令在存储器中顺序存放<br>(6)机器以运算器为中心, IO设备与存储器间的数据传送通过运算器完成</font>",
                "现代计算机和冯诺伊曼的不同": "现代计算机已经转化为以<font color = 'blue'>存储器</font>为中心",
                "运算器": "完成算术运算和逻辑运算, 并将运算中间结果暂存在运算器中",
                "存储器": "用来存放指令和数据",
                "控制器": "用来控制, 指挥程序和数据的输入, 运行, 以及处理计算结果",
                "输入设备": "用来将人们熟悉的信息形式转换成机器能够识别的信息形式, 常见有键盘, 鼠标等",
                "输出设备": "可以将机器运算的结果转换成人们熟悉的信息形式, 如打印机输出, 显示器输出等",
                "中央处理器CPU": "运算器和控制器, 因为它们电路结构上联系紧密",
                "现代计算机三大组成": "CPU, I/O设备, 主存储器",
                "主机": "CPU和主存储器",
                "主存储器": "可以直接与CPU交换信息, 用来存放程序和数据",
                "算数逻辑单元ALU": "用来进行算数逻辑运算, CPU核心部件之一",
                "控制单元CU": "解释存储器中的指令, 发送各种操作命令来执行指令, CPU核心部件之二",
                "计算机工作步骤":"<font color = 'blue'>重点:</font><br>计算ax^2 + bx + c的流程: <br><font color = 'blue'>(1)将x取到运算器中</font><br>(2)乘以x, 将结果存于运算器中<br><font color = 'blue'>再乘以a, 将结果存于运算器中</font><br>(4)将ax^2送回存储器中<br><font color = 'blue'>(6)取B至运算器中</font><br>(6)乘以x, 得bx, 存于运算器中<br><font color = 'blue'>(7)将ax^2从存储器中取出与bx相加, 结果存于运算器中</font><br>(8)再将c取出与结果相加, 得ax^2 + bx + c, 存于运算器中",
                "操作码": "机器所执行的各种操作, 如取数, 存数, 加减乘除, 停机, 打印等",
                "地址码": "表示参与运算的数在存储器内的位置"
            },
            "1.2 英文简写释义":{
                "CPU": "Central Processing Unit 中央处理器, 包括控制器和运算器",
                "PC": "Program Counter 程序计数器",
                "IR": "Instruction Register 指令寄存器",
                "CU": "Control Unit 控制器",
                "ALU": "Arithmetic Logic Unit 算数逻辑单元",
                "ACC": "Accumulator 累加器",
                "MQ": "Multipier-Quotient 乘商寄存器",
                "X": "操作数寄存器",
                "MAR": "Memrory Address Register 存储器地址寄存器",
                "MDR": "Memrory Data Register 存储器数据寄存器",
                "I/O": "输入输出设备"
            },
            "1.3 计算机硬件技术指标":{
                "硬件指标": "机器字长, 存储容量, 运算速度(MIP, FLOPS, CPI)",
                "机器字长": "CPU一次能够<font color = 'blue'>处理数据的位数</font>, 通常与CPU的寄存器位数有关",
                "主存容量": "主存中存放<font color = 'blue'>二进制代码的总位数</font><br>    存储容量 = 存储单元个数(MAR) * 存储字长(MDR)<br>例如: <br>    MAR16位, 根据2^16 = 65536, 存储体内就有65536个存储单元, MDR为32位, 则总容量 = 65536 * 32 = 2M位",
                "辅存容量": "通常用字节数来表示",
                "运算速度": "MIPS:Million Instruction Per Second 每秒执行的百万条指令数<br>CPI:Circle Per Instruction 执行一条指令所需时钟周期<br>FLOPS: Floating Point Operation Per Second 每秒浮点运算速度"
            },
            "存储器相关":{
                "存储元件(基元, 元)": "用来存放一位二进制信息",
                "存储单元": "若干个存储元件组成",
                "存储体(矩阵)": "若干个存储单元组成",
                "存储字": "存储单元中二进制位数的<font color = 'blue'>组合</font>",
                "存储字长": "存储单元中二进制位的<font color = 'blue'>位数</font>"
            }
        },
        "第二章 计算机发展及运用":{
            "2.2 发展历史":{
                "四代计算机":"第一代计算机: <font color = 'blue'>电子管</font><br>第二代计算机: <font color = 'blue'>晶体管</font><br>第三代计算机: <font color = 'blue'>小规模集成电路</font><br>第四代计算机: <font color = 'blue'>大规模集成电路</font>",
                "摩尔定律": "微芯片上集成的晶体管数目, 以每三年翻两番的规律递增"
            }
        },
        "第三章 系统总线":{
            "3.1 总线概念和学习方法": {
                "总线概念": "连接多个部件(模块)的信息传输线, 是各部件共享的传输介质.<font color = 'blue'>在某个时刻, 只允许一个部件向总线发送信息, 多个部件可以接受信息</font>",
                "学习方法": "1. 掌握总线的各种概念<br>2. 如何克服总线的瓶颈<br>3. 如何对总线进行管理, 包括判优控制和通信控制"
            },
            "3.2 各种总线基本概念":{
                "总线的传输周期": "一次总线操作所需的时间, 包括申请阶段, 寻址阶段, 传送阶段和结束阶段",
                "总线宽度": "总线上同时能够传送的数据位数, <font color = 'blue'>通常指数据总线的根数<br>",
                "总线带宽": "单位时间内总线上可传输数据的位数, 单位通常是字节每秒, Bps",
                "总线特性": "机械特性, 电气特性, 功能特性, 时间特性"
            }
        }
    }
}
